func New(logger kitlog.Logger) api.Service {
	return &service{
		logger: logger.With("subsystem", "service"),
	}
}

type service struct {
	logger kitlog.Logger
}

func (svc service) methodLogger(name string) kitlog.Logger {
	return kitlog.With(svc.logger, "method", name)
}


{{range . -}}

{{.SummaryAsComment}}
func (svc service) {{.OperationId}}(ctx context.Context

{{- if .HasBody -}}

{{range $index, $body := .Bodies -}}

{{- if eq $index 0 -}}
, data {{$body.Schema.GoType}}
{{- end -}}

{{- end -}}

{{- else -}}

{{range $index, $param := .AllParams -}}
, {{- $param.ParamName}} {{if not $param.Required}}*{{end}}{{$param.Schema.GoType -}}
{{- end -}}

{{- end -}}

) {{ if not .GetResponseTypeDefinitions}} error {{else -}}
( 
{{- range $index, $return := .GetResponseTypeDefinitions -}}
{{- if $index }}, {{end -}}
*{{ $return.Schema.GoType }}
{{- end -}}
, error)
{{- end }} {

	svc.logger.Log("msg", "this service method must be implemented")
{{ if not .GetResponseTypeDefinitions }}
   return api.Error(http.StatusNotImplemented, "not implemented")
{{ else }}
   return nil, api.Error(http.StatusNotImplemented, "not implemented")
{{ end }}

}
{{end}}
